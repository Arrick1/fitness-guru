{"version":3,"sources":["constants/routes.js","component/NavBar/Navbar.js","component/Login/Login.js","component/Register/Register.js","component/Exercise/Exercise.js","component/EditUser/EditUser.js","component/ShowUser/ShowUser.js","component/Profile/Profile.js","component/Home/Home.js","App.js","serviceWorker.js","index.js"],"names":["LOGIN","Nav","_ref","currentUser","doLogout","react_default","a","createElement","class","href","className","react_router_dom","to","concat","_id","exact","activeClassName","username","onClick","key","routes","Login","state","password","changeHandler","e","_this","setState","Object","defineProperty","target","name","value","onSubmit","_callee","loginResponse","parsedResponse","regenerator_default","wrap","_context","prev","next","preventDefault","fetch","method","credentials","body","JSON","stringify","headers","Content-Type","sent","json","data","console","log","props","doSetCurrentUser","logged","message","stop","_this$state","this","react_router","htmlFor","type","onChange","Component","Register","registerResponse","user","Register_RegisterForm","RegisterForm","_ref2","Exercise","exerciseList","exercise","map","i","parse","description","deleteItem","addExercise","EditUser","submitEdit","ShowUser","doGetUser","parsedUser","match","params","id","abrupt","t0","doEditUser","_callee2","updateUser","_context2","Content-type","then","response","_this2","_ref3","component_EditUser_EditUser","withRouter","Profile","workouts","getWorkouts","parsedWorkouts","component_ShowUser_ShowUser","w","videoLink","split","replace","width","height","src","Home","frameBorder","allow","allowFullScreen","title","App","history","push","getExercise","exerciseJson","ok","Error","statusText","filter","index","_callee3","obj","_context3","success","results","_this3","Navbar","path","render","component_Login_Login","component_Register_Register","component_Home_Home","component_Profile_Profile","component_Exercise_Exercise","Boolean","window","location","hostname","ReactDOM","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.3d9b6c73.chunk.js","sourcesContent":["export const ROOT = '/'\nexport const EDIT = '/edit'\nexport const PROFILE = '/profile'\nexport const EXERCISE= '/exercise'\nexport const LOGIN= '/login'\nexport const LOGOUT= '/logout'\nexport const REGISTER= '/register'","import React from 'react'\nimport { NavLink } from 'react-router-dom'\n\nimport * as routes from '../../constants/routes'\nimport './NavBar.css'\nimport 'materialize-css/dist/css/materialize.min.css'\n\n\n\nconst Nav = ({currentUser, doLogout}) => \n\n<nav>\n<div class=\"nav-wrapper\">\n  <a href=\"/\" class=\"brand-logo center\">Fitness-Guru</a>\n  <div className='nav black'  >\n          {\n            currentUser && <NavLink to={`${routes.PROFILE}/${currentUser._id}`} exact activeClassName='selected' ><button className=\"navButton\">Profile</button></NavLink> \n          }\n\n          {\n            currentUser && <NavLink to={`${routes.EDIT}/${currentUser._id} `}exact activeClassName='selected' ><button className=\"navButton\">Edit</button></NavLink> \n          }\n\n            <NavLink to={routes.EXERCISE} exact activeClassName='selected'><button className=\"navButton\">Exercises</button></NavLink>  \n\n          {\n            currentUser\n            ? (<span> {currentUser.username} <button className=\"navButton\" onClick={doLogout}>Logout</button></span>)\n            : [<NavLink  key={1} to={routes.REGISTER} exact activeClassName='selected'><button   className=\"navButton\">Register</button></NavLink>,\n            <NavLink key={2} to={routes.LOGIN} activeClassName=\"selected\"><button className=\"navButton\">Login</button> </NavLink>]\n          }\n    </div>\n</div>\n</nav>\n\n\n \n\nexport default Nav\n","import React, { Component } from 'react'\nimport { Redirect } from 'react-router-dom'\nimport './Login.css'\n\nclass Login extends Component {\n    state={\n        username:'',\n        password:''\n    }\n    changeHandler = e => {\n        this.setState({\n          [e.target.name]: e.target.value\n        })\n      }\n      onSubmit = async (e) => {\n        e.preventDefault();\n        const loginResponse = await fetch('/users/login',{\n          method: \"POST\",\n          credentials: 'include',\n          body: JSON.stringify(this.state),\n          headers: {\n            \"Content-Type\" : 'application/json'\n          }\n        })\n\n         const parsedResponse = await loginResponse.json();\n            if(parsedResponse.data){\n              console.log(parsedResponse)\n                this.props.doSetCurrentUser(parsedResponse.data)\n                this.setState({\n                  logged: true\n                })\n            } else {\n              this.setState({\n                message: 'Try again'\n              })\n            }\n    }\n\n    render() {\n      const {username, password} = this.state\n      console.log(this.props)\n     return (\n       this.state.logged\n       ? <Redirect to={`/profile/${this.props.currentUser._id}`} />\n       :\n       <form onSubmit={this.onSubmit}>\n        <label htmlFor='username'> USERNAME</label>\n        <input type='text' name=\"username\" value={username} onChange={this.changeHandler}/>\n        <label htmlFor='password'> PASSWORD</label>\n        <input type='password' name=\"password\" value={password} onChange={this.changeHandler}/>\n        <button className=\"navButton\" type=\"submit\">Login</button> \n            {\n              this.state.message\n            }\n        </form>\n        )\n    }\n}\nexport default Login ","import React, { Component } from 'react'\nimport { Redirect } from 'react-router-dom'\nimport * as routes from '../../constants/routes'\nimport './Register.css'\n\n\nclass Register extends Component {\n    state={\n        username:'',\n        password:'',\n        logged: false\n    }\n\n    changeHandler = e => {\n        this.setState({\n          [e.target.name]: e.target.value\n        })\n      }\n\n      onSubmit = async (e) => {\n        e.preventDefault();\n        const registerResponse = await fetch('/users/',{\n          method: \"POST\",\n          credentials: 'include',\n          body: JSON.stringify(this.state),\n          headers: {\n            \"Content-Type\" : 'application/json'\n          }\n        })\n\n         const parsedResponse = await registerResponse.json();\n            console.log(parsedResponse)\n            if(parsedResponse.user){\n              console.log(parsedResponse)\n                this.props.doSetCurrentUser(parsedResponse.data)\n                this.setState({\n                  logged: true\n                })\n            }\n    }\n\n      \n    render() {\n        const {username, password} = this.state\n        return( \n            <div>\n                {\n                    this.state.logged\n                    ? <Redirect to={routes.ROOT}/>\n                    : <RegisterForm\n                        changeHandler ={this.changeHandler}\n                        onSubmit ={this.onSubmit}\n                        username={username}\n                        password={password}\n                        />\n                }\n            </div>\n        )\n    }\n}\n\nconst RegisterForm = ({ changeHandler, onSubmit, username, password }) =>\n                <form onSubmit ={e => onSubmit(e)}>\n                    <label htmlFor='username'> USERNAME</label>\n                    <input onChange={e => changeHandler(e)} type='text' name=\"username\"  value={username} /> <br/>\n                    <label htmlFor='password'> PASSWORD</label>\n                    <input onChange={e => changeHandler(e)} type='password' name=\"password\" value={password}/><br/>\n                    <button className=\"navButton\" type=\"submit\">Register</button>\n                </form>\n\n\nexport default Register","import React from 'react'\nimport parse from 'html-react-parser'\n\n\nconst Exercise = (props) =>  {\n\n\n    const exerciseList = props.exercise.map((e, i) =>\n        <li key ={i}>\n            {parse(e.description)}\n            <button onClick={() => props.deleteItem(i)}>Delete</button>\n            <button onClick={() => props.addExercise(e)}>Add to Workout</button>\n         </li>\n        \n    )\n    return(\n        <div> \n            <div class=\"row\">\n                <div class=\"col s12\">\n                    <h2>Exercise page</h2>\n                </div>\n                <div class=\"col s6\">User Information goes here</div>\n                <div class=\"col s6\">\n                    <div className=\"eList\">     \n                    {props.exercise\n                        ?<ul>{exerciseList}</ul>\n                        : <div></div>\n                    }\n                    </div>\n                </div>\n            </div> \n        </div>\n    )\n\n}\n\n\n\n\nexport default Exercise","import React, { Component } from 'react'\nimport 'bootstrap/dist/css/bootstrap.min.css'\n\nclass EditUser extends Component {\n    render(){\n        return (\n            <div>\n                <form onSubmit={e => this.props.submitEdit(e)}>\n                    <label htmlFor='username'> USERNAME</label>\n                    <input value={this.props.username}type=\"username\" name=\"username\" onChange={e => this.props.changeHandler(e)}/>\n                    <label htmlFor='password'> PASSWORD</label>\n                    <input value={this.props.password} type=\"password\" name=\"password\" onChange={e => this.props.changeHandler(e)}/>\n                    <button type=\"submit\"> Update</button>\n                </form>\n            </div>\n\n        )\n    }\n} \n\nexport default EditUser","import React, { Component } from 'react'\nimport { withRouter } from 'react-router-dom'\nimport EditUser from '../EditUser/EditUser'\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nclass ShowUser extends Component {\n    state = {\n        user: {}\n      }\n\n    componentDidMount(){\n        this.doGetUser()\n        .then(({user})=> this.setState({user: user}))\n\n    }\n\n    changeHandler = e => {\n        this.setState({\n            [e.target.name]: e.target.value\n        })\n    }\n    doGetUser = async () => {\n        try {\n            const user = await fetch(`/users/${this.props.match.params.id}`)\n            const parsedUser = await user.json()\n            return parsedUser\n        } catch (err) {\n            console.log(err)\n        }\n    }\n    doEditUser = async () => {\n        try {\n          console.log(this.state.user._id, \"<-- this.state.user._id\");\n          const updateUser = await fetch(`/users/update/${this.state.user._id}`, {\n            method: \"PUT\",\n            credentials: \"include\",\n            body: JSON.stringify(this.state),\n            headers: {\n              \"Content-type\": \"application/json\"\n            }\n          });\n          const parsedUser = await updateUser.json();\n          console.log(\n            parsedUser,\n            \"<-- parsedUser in doEditUser function in ShowUser.js\"\n          );\n          return parsedUser;\n        } catch (err) {\n          console.log(err);\n        }\n      };\n      submitEdit = e => {\n        e.preventDefault();\n        this.doEditUser().then(response => {\n          console.log(\n            response,\n            \"<-- response in submitEdit function in ShowUser.js\"\n          );\n          this.setState({\n            user: response.updateUser\n          });\n        });\n      };\n    render (){\n        return(\n            <div>\n                <h1> Hello {this.state.user && this.state.user.username}</h1>\n                <div>\n                <h2>Edit User Info</h2>\n                    {\n                        this.props.currentUser\n                            && (this.props.currentUser._id === this.props.match.params.id)\n                                &&  <EditUser \n                                        submitEdit={this.submitEdit}\n                                        changeHandler={this.changeHandler}\n                                        username={this.state.user.username}\n                                        password={this.state.password}\n                                    />\n                    }\n\n                </div>\n             </div>\n        )\n    }\n}\n\nexport default withRouter(ShowUser)","import React, { Component } from 'react'\nimport parse from 'html-react-parser'\nimport ShowUser from '../ShowUser/ShowUser'\n\nclass Profile extends Component {\n    state ={\n        workouts: []\n    }\n    componentDidMount () {\n        this.getWorkouts()\n        console.log(this.state.workouts)\n\n    }\n    getWorkouts =  async () => {\n        const workouts = await fetch('/users/profile')\n        const parsedWorkouts = await workouts.json()\n        console.log(parsedWorkouts)\n        this.setState({\n            workouts: parsedWorkouts.workouts\n        })\n\n    }\n\n    deleteItem = async i => {\n        const workouts = await fetch('/users/profile')\n        const deleteItem = await fetch(`/users/delete/${i}`, {\n             method: 'DELETE'\n         })\n        const parsedWorkouts = await workouts.json()\n        const parsedResponse = await deleteItem.json()\n        this.setState({\n            currentUser: parsedResponse.user,\n            workouts: parsedWorkouts.workouts\n            })\n    }\n    render () {\n        return(\n            <div>\n                <div><ShowUser currentUser={this.props.currentUser} /></div>\n                {this.state.workouts.map((w, i) => {\n                    const videoLink = w.description.split('https')[1] && `https${w.description.split('https')[1].replace('watch?v=', 'embed/').replace('</p>', '')}`\n                    console.log(videoLink)\n                    return (\n                        <div>\n                            \n                            <h1>{w.name}</h1>\n                            <p>{parse(w.description)}</p>\n                            {\n                                videoLink\n                                    && <iframe  width='400px' height='300px' src={ videoLink } />\n                            }\n                            \n                            <button>Delete</button>\n                        </div>\n                    )\n                })}\n            </div>\n\n        )\n    }\n}\n\nexport default Profile ","import React, { Component } from 'react'\nimport './Home.css'\nimport 'materialize-css/dist/css/materialize.min.css'\n\nclass Home extends Component {\n    render(){\n        return(\n            <div class='row'>\n                <div className=\"info\">\n                    <h3>The Importance of Fitness!</h3>\n                    <p class=\"col s6\">Regular exercise and physical activity promotes strong muscles and bones. It improves respiratory, cardiovascular health, and overall health. Staying active can also help you maintain a healthy weight, reduce your risk for type 2 diabetes, heart disease, and reduce your risk for some cancers.</p>\n                </div> \n                <div className=\"video\" class=\"col s6\">\n                    <iframe width='560' height='315' src='https://www.youtube.com/embed/-IeRUtqzKGI'\n                    frameBorder='0'\n                    allow='autoplay; encrypted-media'\n                    allowFullScreen\n                    title='video'/> \n                </div>\n            </div> \n        )\n    }\n}\n\nexport default Home ","import React,{ Component } from 'react';\nimport { Switch, Route, withRouter } from 'react-router-dom'\n\n\n// Components \nimport NavBar from './component/NavBar/Navbar'\nimport Login from './component/Login/Login'\nimport Register from './component/Register/Register'\nimport Exercise from './component/Exercise/Exercise'\nimport Profile from \"./component/Profile/Profile\"\nimport Home from './component/Home/Home'\n\nimport * as routes from './constants/routes'\nimport './App.css';\n\nclass App extends Component {\n  state = {\n    currentUser: null,\n    exercise: []\n  }\n\n  componentDidMount(){\n    this.getExercise().then(data=>{\n      this.setState({\n        exercise: data.data.results\n      })\n    })\n  }\n\n  doSetCurrentUser = user =>\n  this.setState({\n    currentUser: user\n  })\n\n  doLogout = async () =>{\n    await fetch('/users/logout')\n    this.setState({\n      currentUser: null\n    })\n    this.props.history.push(routes.LOGIN)\n  }\n\n  // async componentDidMount(){\n  //   await fetch('/users/logout')\n  //   this.getExercise().then(data =>\n  //     this.setState({\n  //       exercise: data.data.results\n  //     })\n  //   ) \n  // }\n\n  getExercise = async() => {\n    try {\n      const exercise = await fetch('/api/exercise')\n      if(!exercise.ok){\n        throw Error(exercise.response.statusText)\n      }\n      const exerciseJson = await exercise.json()\n      console.log(exerciseJson)\n      return exerciseJson\n      \n    } catch (err) {\n      console.log(err, 'err in the catch block')\n      return err\n    }\n\n  }\n  deleteItem = i => \n  this.setState({\n    exercise: this.state.exercise.filter((exercise, index) =>\n    index !== i\n    )\n  })\n\n  addExercise = async (obj) =>{\n    const response = await fetch('/users/add',{\n      method:\"POST\",\n      credentials: \"include\",\n      body: JSON.stringify(obj),\n      headers:{\n        \"Content-Type\": \"application/json\"\n      }\n    })\n    const parsedResponse = await response.json()\n    if (parsedResponse.success){\n      this.setState({\n      exercise: this.state.exercise.filter((exercise, index) => exercise.id !== obj.id)\n    })\n    }\n\n  }\n\n  render() {\n    console.log(this.state.exercise)\n    const{ exercise } = this.state\n    return (\n      <div>\n        <div><NavBar doLogout={this.doLogout} currentUser={this.state.currentUser}/>\n          <Switch>\n          <Route exact path={routes.LOGIN} render={()=> <Login currentUser={this.state.currentUser} doSetCurrentUser={this.doSetCurrentUser}/>}/>\n\n          <Route exact path={routes.REGISTER} render={()=> <Register currentUser={this.state.currentUser} doSetCurrentUser={this.doSetCurrentUser} />}/>\n\n          <Route exact path={routes.ROOT} render={() =>  <div> <Home/></div>} /> \n\n          <Route exact path= {`${routes.PROFILE}/:id`} render={() => <div><Profile currentUser={this.state.currentUser}/> </div> } />\n\n          <Route exact path={routes.EDIT}  render={() => <div>This is the Edit page  </div>} />\n\n          <Route exact path={routes.EXERCISE} render={() => <Exercise exercise={exercise} deleteItem={this.deleteItem} addExercise={this.addExercise}/> } />\n          \n          <Route render={() => <div>NotFound</div>} />\n          </Switch>\n        </div>\n      </div>\n      \n    );\n\n  }\n  \n}\n\nexport default withRouter(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter as Router } from 'react-router-dom'\n\n\n\nReactDOM.render(\n<Router>\n    <App />\n</Router>, \n    document.getElementById('root')\n    );\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}